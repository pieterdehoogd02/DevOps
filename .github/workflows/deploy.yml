name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up SSH
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
        chmod 600 private_key.pem

    - name: Connect to EC2 and Deploy
      run: |
        ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          
          # Go to project directory
          mkdir app
          cd /home/ubuntu/app
  
          # Test if the .git directory exists and if not, initialize it
          if [ -d ".git" ]; then
            echo ".git folder exists"
          else 
            git init .
            echo ".git folder created"
          fi

          # Ensure the correct repository URL is used
          git remote add origin ${{ secrets.DEPLOY_REPO_URL }}
          
          # Pull latest changes from GitHub
          git pull origin main

          # go to the auth service directory
          cd backend/authentication-service
          


          # Stop & Remove existing container
          docker stop auth-service || true
          docker rm auth-service || true

          ls -l ../../../etc/ssl/certs/selfsigned.crt
          
          # Copy the certificate from EC2 instance to the Docker build context
          cp ../../../etc/ssl/certs/selfsigned.crt .


          # Create the logs directory if it doesn't exist
          mkdir -p ../../../auth-service-logs


          # Build and Run New Container with logs enabled
          docker build -t authentication-service .

          docker run -d -p 5001:5001 --name auth-service authentication-service

          # check if server.js is in the /app/src directory
          docker exec -it auth-service /bin/bash
          ls -la /app/src

          # Wait for container to be healthy (optional, but useful)
          sleep 5
          docker ps -a

          # Show logs after startup
          docker logs -f auth-service
        EOF
